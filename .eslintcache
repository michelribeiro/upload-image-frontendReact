[{"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/index.tsx":"1","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/reportWebVitals.ts":"2","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/App.tsx":"3","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/styles/global.js":"4","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/styles/app.js":"5","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/services/api.tsx":"6","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/FileList/index.tsx":"7","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/Upload/index.tsx":"8","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/FileList/styles.js":"9","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/Upload/styles.js":"10"},{"size":267,"mtime":1611524031549,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611519190911,"results":"13","hashOfConfig":"12"},{"size":4584,"mtime":1611693675001,"results":"14","hashOfConfig":"12"},{"size":441,"mtime":1611530917563,"results":"15","hashOfConfig":"12"},{"size":580,"mtime":1611589012705,"results":"16","hashOfConfig":"12"},{"size":121,"mtime":1611711923443,"results":"17","hashOfConfig":"12"},{"size":1906,"mtime":1611693565174,"results":"18","hashOfConfig":"12"},{"size":1137,"mtime":1611540580032,"results":"19","hashOfConfig":"12"},{"size":1029,"mtime":1611534761033,"results":"20","hashOfConfig":"12"},{"size":743,"mtime":1611528172878,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"rcelp5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/index.tsx",[],["45","46"],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/reportWebVitals.ts",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/App.tsx",["47"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport GlobalStyle from \"./styles/global\";\nimport { BoxList, Container, Content } from \"./styles/app\";\nimport Upload from './components/Upload';\nimport FileListItem from './components/FileList';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport api from './services/api';\n\ninterface AttrFiles {\n    file: File;\n    id: number;\n    name: string;\n    readableSize: string;\n    preview: string;\n    progress: number;\n    uploaded: boolean;\n    error: boolean;\n    url: string;\n}\n\nconst App: React.FC = () => {\n\n    const [uploadedFiles, setUploadedFiles] = useState<AttrFiles[]>([]);\n    const [startUpload, setStartUpload] = useState(false);\n\n    useEffect(() => {\n        if(startUpload) {\n            uploadedFiles.forEach(upload => {\n                if(upload.progress === 0) {\n                    processUpload(upload)\n                }\n            })\n            setStartUpload(false)\n        }\n\n    },[startUpload])\n\n\n    useEffect(() => {\n        async function getInitialState() {\n            const response = await api.get('posts');\n            setUploadedFiles(() => {\n                return response.data.map((file:any) => ({\n                    id: file._id,\n                    name: file.name,\n                    readableSize: filesize(file.size),\n                    preview: file.url,\n                    url: file.url,\n                    uploaded: true\n                }))\n            })\n        }\n        getInitialState();\n    },[])\n\n    const handleUpload = (files:any) => {\n\n        const uploaded:AttrFiles[] = files.map((file:any) => ({\n            file,\n            id: uniqueId(),\n            name: file.name,\n            readableSize: filesize(file.size),\n            preview: URL.createObjectURL(file),\n            progress: 0,\n            uploaded: false,\n            error: false,\n            url: null\n        }))\n        const oldStateFiles = [...uploadedFiles, ...uploaded];\n        setUploadedFiles(oldStateFiles);\n        setStartUpload(true)\n    }\n\n    const processUpload = (uploadFile:any) => {\n        const data = new FormData();\n        data.append('file', uploadFile.file, uploadFile.name);\n        api.post('posts', data, {\n            onUploadProgress: e => {\n                const calc = Math.round((e.loaded * 100) / e.total);\n\n                setUploadedFiles(prevState => {\n\n                    return prevState.map(item => {\n                        if (item.id === uploadFile.id) {\n                            item.progress = calc\n                        }\n                        return item\n                    })\n                })\n            }\n        }).then(response => {\n            setUploadedFiles(prevState => {\n                return prevState.map(item => {\n                    if (item.id === uploadFile.id) {\n                        item.uploaded= true;\n                        item.id = response.data._id;\n                        item.url = response.data.url;\n                    }\n                    return item\n                })\n            })\n        }).catch(() => {\n            setUploadedFiles(prevState => {\n                return prevState.map(item => {\n                    if (item.id === uploadFile.id) {\n                        item.error = true;\n                    }\n                    return item\n                })\n            })\n        });\n    }\n    //TODO: Resolver o tipo recebido do componente FileListItem\n    const handleDelete = async (id:number) => {\n        api.delete(`posts/${id}`).then(info => {\n            console.info(info)\n        }).catch( err => console.error(err));\n        setUploadedFiles(prevState => {\n            return prevState.filter(item => item.id !== id);\n        })\n    }\n\n    return (\n        <Fragment>\n            <Container>\n                <Content>\n                    <Upload onUpload={handleUpload} />\n                        {\n                            !!uploadedFiles.length && (\n                                <BoxList>\n                                    {\n                                        uploadedFiles.map((itemFile:AttrFiles) => (\n                                            <FileListItem {...itemFile } key={itemFile.id} onDelete={handleDelete} />\n                                        ))\n                                    }\n                                </BoxList>\n                            )\n                        }\n                </Content>\n            <GlobalStyle />\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default App;\n","/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/styles/global.js",[],["48","49"],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/styles/app.js",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/services/api.tsx",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/FileList/index.tsx",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/Upload/index.tsx",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/FileList/styles.js",[],"/Users/michelribeiro/Documents/ESTUDOS/ROCKETCITY/UPLOAD_IMAGE/frontend/src/components/Upload/styles.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":37,"column":7,"nodeType":"56","endLine":37,"endColumn":20,"suggestions":"57"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedFiles'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [startUpload, uploadedFiles]",{"range":"63","text":"64"},[992,1005],"[startUpload, uploadedFiles]"]